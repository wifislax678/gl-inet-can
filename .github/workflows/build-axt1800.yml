---
name: AXT1800 build kernel 4.x
on:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: requirements
        run: |
          sudo apt update
          sudo apt install build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools python3-yaml -y
          sudo timedatectl set-timezone "$TZ"
      - name: config
        run: |
          git config --global user.email "5918983@qq.com"
          git config --global user.name "dl"
      - name: build
        run: |        
          chmod u+x build.sh && ./build.sh ~ target_wlan_ap-gl-axt1800

      - name: Organize files
        id: organize
        if: true && !failure() && !cancelled()
        run: |
          echo '###############################################################################'
          echo $PWD
          echo $GITHUB_WORKSPACE
          echo '###############################################################################'
          ls -lh /workspace/gl-infra-builder/wlan-ap/openwrt/bin/targets/*/*
          echo '###############################################################################'
          cd /workspace/gl-infra-builder/wlan-ap/openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=/workspace/gl-infra-builder/wlan-ap/openwrt/bin" >> $GITHUB_ENV
          echo "::set-output name=status::success"
          echo "DEVICE_NAME=_axt1800" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
          
      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        if: steps.organize.outputs.status == 'success' && !cancelled() && !failure()
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}
              
      - name: Generate release tag
        id: tag
        if: true && !failure() && !cancelled()
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
          echo "::set-output name=status::success"
          
      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled() && !failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: ${{ env.FIRMWARE }}/*
          
